web_server: no

schedules:
  - tasks:
      - series-to-media
      - series-to-re-encode
      - movies-to-media
      - movies-to-re-encode
      - subs-to-subs
      - cbz-to-manga
    interval:
      minutes: 30
  - tasks:
      - torrents-remove
    interval:
      hours: 24

templates:
  global:
    no_entries_ok: yes

  downloads-mp4:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(mp4)$'
      recursive: yes
    accept_all: yes

  downloads-mkv:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(mkv)$'
      recursive: yes
    accept_all: yes

  downloads-subs:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(srt|sub|ssa)$'
      recursive: yes
    accept_all: yes

  downloads-cbz:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(cbz|png|jpg|jpeg)$'
      recursive: yes
    accept_all: yes

  series:
    parsing:
      series: guessit
    all_series:
      parse_only: yes
    thetvdb_lookup: yes
    require_field: series_name

  movies:
    require_field: movie_name
    imdb_lookup: yes

tasks:
  series-to-media:
    priority: 1
    template:
      - downloads-mp4
      - series
    copy:
      to: '/storage/media/series/{{ tvdb_series_name }}/Season {{ series_season }}'

  series-to-re-encode:
    priority: 1
    template:
      - downloads-mkv
      - series
    copy:
      to: '/storage/re-encode/series/{{ tvdb_series_name }}/Season {{ series_season }}'

  movies-to-media:
    priority: 1
    template:
      - downloads-mp4
      - movies
    copy:
      to: '/storage/media/movies/{{ movie_name }} ({{ movie_year }})'

  movies-to-re-encode:
    priority: 1
    template:
      - downloads-mkv
      - movies
    copy:
      to: '/storage/re-encode/movies/{{ movie_name }} ({{ movie_year }})'

  subs-to-subs:
    priority: 1
    disable: [seen, seen_info_hash]
    template:
      - downloads-subs
    exec: |
      location="{{ location }}"
      sub_location=/storage/subs/$(dirname "${location#/*/*/}")
      mkdir -p "${sub_location}"
      cp "${location}" "${sub_location}"

  cbz-to-manga:
    priority: 1
    disable: [seen, seen_info_hash]
    template:
      - downloads-cbz
    exec: |
      location="{{ location }}"
      manga_location=/storage/manga/$(dirname "${location#/*/*/}")
      mkdir -p "${manga_location}"
      cp "${location}" "${manga_location}"

  torrents-remove:
    priority: 50
    from_transmission:
      host: transmission
      port: 9091
      username: admin
      password: "supersecret"
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 100: accept
    transmission:
      host: transmission
      port: 9091
      username: admin
      password: "supersecret"
      action: purge
